// <auto-generated />
using Grad_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Grad_Api.Migrations
{
    [DbContext(typeof(GradProjDbContext))]
    [Migration("20250404205635_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Grad_Api.Data.Course", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId ");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description ");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorId ");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ThumbnailUrl ");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title ");

                    b.HasKey("Id")
                        .HasName("PK__Course__3214EC073AE4FFCA");

                    b.HasIndex("CategoryId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Grad_Api.Data.CourseCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name ");

                    b.HasKey("Id")
                        .HasName("PK__CourseCa__3214EC07415C3794");

                    b.ToTable("CourseCategory", (string)null);
                });

            modelBuilder.Entity("Grad_Api.Data.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Content ");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title ");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VideoUrl ");

                    b.HasKey("Id")
                        .HasName("PK__Lesson__3214EC07751A4E00");

                    b.HasIndex("CourseId");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("Grad_Api.Data.Question", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QuestionText ");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC079DB2C3F8");

                    b.HasIndex("QuizId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("Grad_Api.Data.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title ");

                    b.HasKey("Id")
                        .HasName("PK__Quiz__3214EC0747465A37");

                    b.HasIndex("CourseId");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("Grad_Api.Data.Course", b =>
                {
                    b.HasOne("Grad_Api.Data.CourseCategory", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Grad_Api.Data.Lesson", b =>
                {
                    b.HasOne("Grad_Api.Data.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Lesson_ToTable");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Grad_Api.Data.Question", b =>
                {
                    b.HasOne("Grad_Api.Data.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK_Question_ToTable");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Grad_Api.Data.Quiz", b =>
                {
                    b.HasOne("Grad_Api.Data.Course", "Course")
                        .WithMany("Quizzes")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Quiz_ToTable");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Grad_Api.Data.Course", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("Grad_Api.Data.CourseCategory", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Grad_Api.Data.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
